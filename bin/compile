#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
# set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3

bp_dir=$(cd $(dirname $0); cd ..; pwd)

# clean up leaking environment
unset GIT_DIR

# Load some convenience functions like status(), echo(), and indent()
source $bp_dir/bin/common.sh

source "$build_dir/_webassets.cfg"

# Temporary Directories ------------------------
RUBY_BUILDPACK_DIR=$(mktemp -d -t ruby.XXXXXX)
RUBY_BUILD_DIR=$(mktemp -d -t ruby_build.XXXXXX)
NODE_BUILDPACK_DIR=$(mktemp -d -t node.XXXXXX)
# TMP_BUILD_DIR=$(mktemp -d -t tmp_build.XXXXXX)

mv $build_dir/* $BUIlD_DIR

# Dependencies Installation --------------------
if [ -f $BUIlD_DIR/grunt.js ] || [ -f $BUIlD_DIR/Gruntfile.js ] || [ -f $BUIlD_DIR/Gruntfile.coffee ]; then
  status "Using existing Gruntfile."
else
  status "Using default Gruntfile."
  mv $bp_dir/vendor/Gruntfile.js $BUIlD_DIR/
fi

if [ -f $BUIlD_DIR/grunt-package.json ]; then
  status "Using existing grunt-package."
  if [ -f $BUIlD_DIR/package.json ]; then
    status "Preserving existing grunt-package."
    mv $BUIlD_DIR/package.json $build_dir/package.json
  fi
  mv $BUIlD_DIR/grunt-package.json $BUIlD_DIR/package.json
fi

if [ -f $BUIlD_DIR/grunt-Gemfile ]; then
  status "Using existing grunt-Gemfile."
  if [ -f $BUIlD_DIR/Gemfile ]; then
    status "Preserving existing Gemfile."
    mv $BUIlD_DIR/Gemfile $build_dir/Gemfile
  fi
  mv $BUIlD_DIR/grunt-Gemfile $BUIlD_DIR/Gemfile
fi

if [ -f $BUIlD_DIR/grunt-Gemfile.lock ]; then
  status "Using existing grunt-Gemfile.lock."
  if [ -f $BUIlD_DIR/Gemfile.lock ]; then
    status "Preserving existing Gemfile.lock."
    mv $BUIlD_DIR/Gemfile.lock $build_dir/Gemfile.lock
  fi
  mv $BUIlD_DIR/grunt-Gemfile.lock $BUIlD_DIR/Gemfile.lock
fi

if [ ! -f $BUIlD_DIR/package.json ]; then
  status "Using default package."
  mv $bp_dir/vendor/package-webassets.json $BUIlD_DIR/package.json
fi
if [ ! -f $BUIlD_DIR/Gemfile ]; then
  status "Using default Gemfile."
  mv $bp_dir/vendor/Gemfile $BUIlD_DIR/
fi
if [ ! -f $BUIlD_DIR/Gemfile.lock ]; then
  status "Using default Gemfile.lock."
  mv $bp_dir/vendor/Gemfile.lock $BUIlD_DIR/
fi

mv $BUIlD_DIR/Gemfile $RUBY_BUILD_DIR/
mv $BUIlD_DIR/Gemfile.lock $RUBY_BUILD_DIR/

mkdir -p $cache_dir/webassets

# Ruby Installation --------------------------
status "Installing Ruby and gem dependencies..."
git clone --quiet https://github.com/heroku/heroku-buildpack-ruby.git $RUBY_BUILDPACK_DIR
chmod -f +x $RUBY_BUILDPACK_DIR/bin/{detect,compile,release} || true
$RUBY_BUILDPACK_DIR/bin/compile $RUBY_BUILD_DIR $cache_dir/webassets

# Node Installation --------------------------
status "Installing Node and build dependencies..."
git clone --quiet https://github.com/heroku/heroku-buildpack-nodejs.git $NODE_BUILDPACK_DIR
chmod -f +x $NODE_BUILDPACK_DIR/bin/{detect,compile,release} || true
$NODE_BUILDPACK_DIR/bin/compile $BUIlD_DIR $cache_dir/webassets

status "Running Grunt Task heroku..."
curr_dir=$(pwd)
cd $BUIlD_DIR
GEM_HOME=$RUBY_BUILD_DIR/vendor/bundle/ruby/2.1.0 \
GEM_PATH=$RUBY_BUILD_DIR/vendor/bundle/ruby/2.1.0:$GEM_PATH \
PATH=$BUIlD_DIR/vendor/node/bin:$BUIlD_DIR/bin:$BUIlD_DIR/node_modules/.bin:$PATH \
PATH=$RUBY_BUILD_DIR/bin:$RUBY_BUILD_DIR/vendor/bundle/bin:$RUBY_BUILD_DIR/vendor/bundle/ruby/2.1.0/bin:$PATH \
grunt heroku:$NODE_ENV --destination $build_dir | indent
cd $curr_dir

if [[ $USE_STATIC_SERVER ]] && [ -f $BUIlD_DIR/_static.cfg]; then
  # mv $BUIlD_DIR/_static.cfg $build_dir
  status "Initializing Static Server..."
  STATIC_BUILDPACK_DIR=$(mktemp -d -t node.XXXXXX)
  git clone --quiet https://github.com/abhishekmunie/heroku-buildpack-static.git $STATIC_BUILDPACK_DIR
  chmod -f +x $STATIC_BUILDPACK_DIR/bin/{detect,compile,release} || true
  $STATIC_BUILDPACK_DIR/bin/compile $build_dir $cache_dir/webassets
  rm -fr $STATIC_BUILDPACK_DIR
fi

# Cleanup ------------------------------------
rm -fr $NODE_BUILDPACK_DIR
rm -fr $BUIlD_DIR
rm -fr $STATIC_BUILDPACK_DIR
